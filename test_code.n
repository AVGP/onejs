import math
import gl
import glscene
import codeview

Scene{
	antialias = true
	Layer{
		w: device.w
		h: device.h
		var  i = 1.
		blarp = 0.1
		pixel: #222
	}
	Codeview{
		x:10
		y:10
		sx:1
		sy:1
		ax:0
		ay:0
		font_size = 0.20
		u_boldness = 0.7
		ast:(){
			Codeview{
				x:10
				y:10
				sx:1
				sy:1
				ax:0
				ay:0

				u_boldness = 1.0
				u_outline = true
				font_size = 0.20
				style:(){
					vec4 m = marks[]
					vec2 pos = m.xy
					vec2 center = pos - .5
					var type = floor(m.z / 256.)
					var group = mod(m.z, 256.)
					var sub  = floor(m.w / 256.)
					var part = mod(m.w, 256.)
					if(group == _Delim){
						if(sub == _Paren || sub == _Brace){
							if(sub == _Paren)
								u_color = #magenta
							else
								u_color = #yellow
							u_outline = true
							u_boldness = 0.
							//u_outline_thickness = .1+.5sin(8.p.x+64.*p.y+8.*time.sec)
							u_outline_thickness = (1.+.0*sin(16.*p.y+p.x*8. + 4.*time.sec)) / u_scaling
						}
						if(sub == _Operator){
							u_color = mix(#red, #yellow, abs on sin(length(center)+time.sec))
							u_boldness = .5+.5sin(8.p.x+64.*p.y+8.*time.sec)
						}
					}
					else if(type == _Id){
						u_color = #white
						if(group == _Color){
							u_color = #pink
						}
					}
					else if(type == _Value){
						u_color = #aero
					}
					else if(type == _TypeVar){
						u_color = #00ff00
					}
					else{
						u_color = #orange
					}
				}
			}
		}
		ast = ast.body.steps[0]
	}
}
