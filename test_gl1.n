import math
import gl

define myColor(vec2 p, float anim){
	return (
	(mix(#orange, #black) do 
		abs(sin(param1 * 1. * atan(p.x, p.y))))
	+
	mix(#green, #purple) do
		sin(sin(param1 + anim) * param1 * p.x * p.y)
	)
}

define circle(vec2 p, float power){
	return clamp(1-.5length(p) ** power,0.,1.)
}

define spiral(vec2 p, float r, float t){
	float len = length(p) * r
	float cl = cos(len+t)
	float sl = sin(len+t)
	return vec2(p.x * cl - p.y * sl,
				p.x * sl + p.y * cl)
}

class Test extends Draw{
	dump = 1

	viewmtx: mat4.perspective(70deg, 1, -1, 1)
//	objmtx: mat4.RT(30deg,  1deg * param1 + Time.sec,0,0,0,5)
	objmtx: mat4.RT(30deg,  1deg+Time.sec,0, 0,0,5)

	mesh = vec2Rect(-2, -2, 4, 4)
	vertex: mesh[] * (objmtx * viewmtx)
	p:pixel mesh[]

	param1 = 1
	bg = Image.url('test_texture.jpg')

	sp:spiral(p,2sin on speed*Time.sec, Time.sec)+ 
		spiral(p,cos on speed*Time.sec, 0.)*4.

	//sp:vec2(sin(p.x+speed*Time.sec), sin(p.x-speed*Time.sec)*cos(p.y))
	speed = 1
	pixel: bg.sample(.05sp+.5) ** 
		myColor(sp, Time.sec*1.)

	alpha: circle(p,8.) * sin(8*atan(sp.x, sp.y))* abs on sin(88*atan(sp.x, sp.y))
	draw:(){
		this{}
	}
}

Device{
	fill=#000
	Test{
		speed:1
		//pixel:#red
	}
}