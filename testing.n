testing(title, node){
	out("Testing "+title)

	var Assert = ::{
		assert(check, operation, left, right, str){
			if(!check){
				out(title + " Assert failed ",left,operation,
					right," In expression "+str)
			}
		} // hi!
		callOnce(){
			return ->{}
		}
	}

	if( node.type != 'Function') 
		throw new Error("Can only test quoted functions")

	var body = node.body // here is a comment!

	// gogo magic super power template quotes!
	each(body.steps) do(step){
		if(step.type != 'Expr') return
		var node = step.expr
		if(node.type != 'Logic') return

		var left = node.left // comment here
		var right = node.right
		var op = node.op
		var str = node.toString()
		
		node.left = :L
		node.right = :R

		step.expr = :(
			L = %left,
			R = %right, 
			assert(%node, %op, L, R, %str)
		)
	}
	// make a new object to execute our test in
	Assert.new{
		eval( node )()
	}
}
