Interval::{

	make( .time, cb ){
		interval = =>{
			cb.call( __maker__, time, this )
		}
	}
		
	start( .time, cb ){
		if(isClass()) return this.new(time, cb).start()
		if(running) return
		running = setInterval( this.interval, this.time )
		return this
	}
		
	stop(){
		if(!running) return
		clearInterval(running)   
		running = undefined
	}
}

Timeout::{

	make( .time, cb ){
		timeout = =>{
			cb.call( __maker__, time, this )
		}
	}
		
	start( .time, cb){
		if(isClass()) return this.new(.time, cb).start()
		if(running) return
		running = setTimeout( timeout, time )
		return this
	}
		
	stop(){
		if(!running) return
		clearTimeout(running)   
		running = undefined
	}
}
