import math
import webgl

class Rect extends Node{

	viewmtx: mat4.perspective(70deg, 1, -1, 1)
	objmtx: mat4.RT(30deg,  1deg*param1 + Time.sec,0, 0,0,3)

	mesh = webgl.vec2Rect(-1,-1,2,2,0)
	vertex: mesh[] * (objmtx * viewmtx)

	dump = 1
	// signal ready!
	param1 = 1

	p:pixel mesh[]

	mul2:(x){
		var y = x
		return y
	}

	bg = Image.new('texture1.jpg')
	bgcolor:#orange
	pixel:
		(mix(bgcolor, #black) do 
			abs(sin(param1 * 1. * atan(p.x, p.y))))
		+
		mix(#green, #purple) do
			sin(sin(param1) * param1 * p.x * p.y)

	pixel: texture2D(bg, 0.5*p+0.5, {
		MIN_FILTER:LINEAR
		MAG_FILTER:LINEAR
		WRAP_S:CLAMP_TO_EDGE
		WRAP_T:CLAMP_TO_EDGE
	})
}

// define a procedural texture?
var ref = View{
	fill = #aero
	for(var i = 0 to 10)
		Rect{ param1 = i*1 }

}
