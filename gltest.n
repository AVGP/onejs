import math
import gl

define myColor(vec2 p, float anim){
	return (
	(mix(#orange, #black) do 
		abs(sin(param1 * 1. * atan(p.x, p.y))))
	+
	mix(#green, #purple) do
		sin(sin(param1 + anim) * param1 * p.x * p.y)
	)
}

define spiral(vec2 p, float r, float t){
	float len = length(p) * r
	float cl = cos(len+t)
	float sl = sin(len+t)
	return vec2(p.x * cl - p.y * sl, 
				p.x * sl + p.y * cl)
}

define warp(vec2 p){
	return vec2(
		p.x + 0.002*sin(260.*p.x+4.*Time.sec),
		p.y + 0.002*cos(260.*p.y+4.*Time.sec))
}

class Blur extends Draw{
	buf = Image.rgba_depth_flipped(.5,.5)
	mesh = vec2Rect(-1, -1, 2, 2)
	vertex: mesh[]
	pixel:	buf.sample(pixel mesh[]*.5+.5)
	pass:(){
		buf{
			clearDepth()
			this{
				pixel:buf.sample(warp(pixel mesh[]*0.49+0.5))
			}
			drawChildren()
		}
	}
	draw:(){
		this{}
		drawChildren()
	}
}

class Test extends Draw{
	viewmtx: mat4.perspective(70deg, 1, -1, 1)
	objmtx: mat4.RT(30deg, 90deg*Time.sec, 0, 0, 0, 3+ 35*abs on sin(Time.sec))

	mesh = vec2Rect(-2, -2, 4, 4)
	vertex: mesh[] * (objmtx * viewmtx)
	p:pixel mesh[]

	param1 = 1
	bg = Image.url('texture1.jpg')
	sp:spiral(p, 2., Time.sec)
	pixel: bg.sample(.25p + .5) **
		myColor(sp, Time.sec * 1.)

	draw:(){
		this{}
	}
}

Device{
	fill = #000
	Blur{
		Test{
		}
	}
}