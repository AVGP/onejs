import math
import webgl

class Rect extends GLNode{

	mesh = webgl.vec4Rect(-1, -1, 2, 2, 0)
	
	viewmtx: mat4.perspective(70deg, 1, -1, 1)
	objmtx: mat4.RT(30deg, Time.sec * 30deg + param1*10,0, 0,0,3)

	vertex: mesh[] * (objmtx * viewmtx)
	param1 = 1
	bgcolor: #red

	p:pixel mesh[]
	
	define mul2(vec3 x){
		return x*1.4
	}

	pixel:
		mul2 on (mix(bgcolor, #black) do 
			abs(sin(param1 * atan(p.x, p.y))))
		+ 
		mix(#green, #purple) do
			sin(sin(Time.sec+param1) * 2 * param1 * p.x * p.y)
}

var ref = GLView{
	fill = #aero

	Rect{param1 = 10}
	Rect{param1 = 30}
	Rect{param1 = 60}

}