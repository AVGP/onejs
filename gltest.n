import math
import webgl

class Rect extends GLNode{

	mesh = webgl.vec4Rect(-1, -1, 2, 2, 0)

	viewmtx: mat4.perspective(70deg, 1, -1, 1)
	objmtx: mat4.RT(30deg,  30deg + param1*10,0, 0,0,3)

	genmesh( x, y, w, h){
		return vec2[6](
			x,y,   x+w,y,   x,y+h
			x+w,y, x+w,y+h, x,y+h
		)
	}
	mesh = genmesh(-1,-1,2,2,0)
	dump = 1
	vertex: mesh[] * (objmtx * viewmtx) 
	param1 = 1
	bgcolor: #yellow
	p:pixel mesh[]

	mul2:(x){
		var y = x
		return y
	}

	pixel:
		mul2 on
		(mix(bgcolor, #black) do 
			abs(sin(param1 * 1 * atan(p.x, p.y))))
		+ 
		mix(#green, #purple) do
			sin(sin(param1) *  param1 * p.x * p.y)
}


var ref = GLView{
	fill = #aero
	Rect{
		param1 = 10
	}
}